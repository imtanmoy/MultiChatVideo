/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatclient;

import java.awt.BorderLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.StringTokenizer;
import javax.swing.DefaultListSelectionModel;
import javax.swing.ListSelectionModel;

/**
 *
 * @author TanmoyBanik
 */
public class ClientFrame extends javax.swing.JFrame {

    String username;
    ClientManager clientManager;
    ClientListListener clientListListener;
    ClientWindowListener clientWindowListener;
    MessagePanel[] messagePanels;
    int messagingPanelNo = 0;

    public javax.swing.DefaultListModel list_model;
    public javax.swing.DefaultListSelectionModel dlsm;
    public javax.swing.JList list_online_clients;

    /**
     * Creates new form ClientFrame
     *
     * @param username
     * @param getClientManager
     */
    public ClientFrame(String username, ClientManager getClientManager) {
        clientListListener = new myClientListListener();
        clientWindowListener = new MyClientWindowListener();
        messagePanels = new MessagePanel[1000];
        initComponents();
        this.username = username;
        this.nameText.setText(username);
        this.clientManager = getClientManager;
        clientManager.sendMessage("login " + username);
        clientManager.receiveMessage(clientListListener, clientWindowListener);
        createListModel();
        clickList();
    }

    private void createListModel() {
        list_model = new javax.swing.DefaultListModel();
        list_online_clients = new javax.swing.JList(list_model);
        list_online_clients.setBorder(javax.swing.BorderFactory.createTitledBorder("Buddy List"));

        dlsm = new DefaultListSelectionModel();
        dlsm.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        list_online_clients.setSelectionModel(dlsm);
        onlinePanel.setLayout(new BorderLayout());
        onlinePanel.add(list_online_clients, BorderLayout.CENTER);
    }

    private void clickList() {
        list_online_clients.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent me) {
                if (me.getClickCount() == 2) {
                    String to = (String) list_online_clients.getSelectedValue();
                    boolean isWindowOpen = false;
                    for (int i = 0; i < messagingPanelNo; i++) {
                        if (messagePanels[i].to.equalsIgnoreCase(to)) {
                            isWindowOpen = true;
                            break;
                        }
                    }
                    if (!isWindowOpen) {
                        messagePanels[messagingPanelNo] = new MessagePanel(to, username, clientManager);
                        messagePanels[messagingPanelNo].setVisible(true);
                        chatTabbedPane.addTab(to, messagePanels[messagingPanelNo]);
                        messagingPanelNo++;
                    }

                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nameText = new javax.swing.JLabel();
        onlineText = new javax.swing.JLabel();
        onlinePanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatTabbedPane = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nameText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        nameText.setText("Tanmoy Banik");

        onlineText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        onlineText.setForeground(new java.awt.Color(0, 153, 51));
        onlineText.setText("Online");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(onlineText, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 90, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(nameText)
                .addGap(18, 18, 18)
                .addComponent(onlineText)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout onlinePanelLayout = new javax.swing.GroupLayout(onlinePanel);
        onlinePanel.setLayout(onlinePanelLayout);
        onlinePanelLayout.setHorizontalGroup(
            onlinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        onlinePanelLayout.setVerticalGroup(
            onlinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 576, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(chatTabbedPane);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(onlinePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(onlinePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ClientFrame().setVisible(true);
//            }
//        });
//    }
    class myClientListListener implements ClientListListener {

        @Override
        public void addToList(String usersName) {
            if (!usersName.equalsIgnoreCase(username)) {
                list_model.addElement(usersName);

            }
        }

        @Override
        public void removeFromList(String userName) {
            list_model.removeElement(userName);
        }
    }

    class MyClientWindowListener implements ClientWindowListener {

        @Override
        public void openWindow(String message) {
            boolean isWindowOpen = false;
            int openWindowNo = 0;

            StringTokenizer tokens = new StringTokenizer(message);
            String to = tokens.nextToken();
            String from = tokens.nextToken();
            for (int i = 0; i < messagingPanelNo; i++) {
                if (messagePanels[i].to.equalsIgnoreCase(from)) {
                    isWindowOpen = true;
                    openWindowNo = i;
                    break;
                }
            }

            if (isWindowOpen) {
                messagePanels[openWindowNo].chatTextArea.append(message.replaceFirst(to, "") + "\n");
            } else {
                messagePanels[messagingPanelNo] = new MessagePanel(from, username, clientManager);
//                messagePanels[messagingPanelNo].setVisible(true);
                chatTabbedPane.addTab(from, messagePanels[messagingPanelNo]);
                messagePanels[messagingPanelNo].chatTextArea.append(message.replaceFirst(to, "") + "\n");
                messagingPanelNo++;
            }
        }

//        public void closeWindow(String getMessage) {
//            myPanel.remove(buddyList);
//            addLogInPanel();
//            mi_sign_out.setEnabled(false);
//            mi_sign_in.setEnabled(true);
//            lb_status.setText(getMessage);
//        }
//
//        public void fileStatus(String filesStatus) {
//            lb_status.setText(filesStatus);
//        }
        @Override
        public void closeWindow(String message) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane chatTabbedPane;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameText;
    private javax.swing.JPanel onlinePanel;
    private javax.swing.JLabel onlineText;
    // End of variables declaration//GEN-END:variables
}
